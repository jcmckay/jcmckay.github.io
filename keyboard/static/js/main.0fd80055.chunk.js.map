{"version":3,"sources":["contexts/capture-context/index.tsx","components/key/index.tsx","components/keyboard/index.tsx","components/play-back-controls/axel-f.ts","components/play-back-controls/index.tsx","components/play-back-display/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CaptureContext","createContext","CaptureProvider","Consumer","props","useState","playbackNotes","setPlaybackNotes","captureStartTime","setCaptureStartTime","Provider","value","captureNote","playbackNote","now","Date","getTime","length","time","Tone","Time","toBarsBeatsSixteenths","clearCaptureData","children","Key","captureContext","useContext","keyPressedDateTime","setKeyPressDateTime","Synth","toMaster","synth","color","note","style","handleKeyPress","triggerAttack","handleKeyRelease","triggerRelease","dur","calculateDuration","toNotation","isMobile","className","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","Keyboard","key","left","map","k","AxelF","PlayBackControls","isPlaying","setIsPlaying","part","setPart","playback","setPlayback","lastNote","setLastNote","useEffect","start","Transport","scheduleOnce","removeAll","toggle","toSeconds","onClick","title","size","icon","faStop","Part","event","triggerAttackRelease","faPlay","faCircle","faBan","PlayBackDisplay","pbn","i","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fd80055.chunk.js","sourcesContent":["import React, { createContext, FC, useState } from 'react';\n// @ts-ignore\nimport Tone from 'tone';\n\nexport interface ICaptureContext {\n  captureStartTime: number;\n  playbackNotes: IPlaybackNote[];\n  captureNote(playbackNote: IPlaybackNote): void;\n  clearCaptureData(): void;\n}\nexport interface ICaptureProviderProps {}\nexport interface IPlaybackNote {\n  dur?: string;\n  note: string;\n  time?: any;\n}\n\nexport const CaptureContext = createContext({} as ICaptureContext);\nexport const CaptureConsumer = CaptureContext.Consumer;\n\nexport const CaptureProvider: FC<ICaptureProviderProps> = props => {\n  const [playbackNotes, setPlaybackNotes] = useState([] as IPlaybackNote[]);\n  const [captureStartTime, setCaptureStartTime] = useState(0);\n\n  const handleCaptureNote = (playbackNote: IPlaybackNote) => {\n    const now = new Date().getTime() / 1000;\n    if (playbackNotes.length === 0) {\n      setCaptureStartTime(now);\n      playbackNote.time = Tone.Time(0).toBarsBeatsSixteenths();\n    } else {\n      playbackNote.time = Tone.Time(now - captureStartTime).toBarsBeatsSixteenths();\n    }\n\n    setPlaybackNotes([...playbackNotes, playbackNote]);\n  };\n\n  const clearCaptureData = () => {\n    setPlaybackNotes([]);\n  };\n\n  return (\n    <CaptureContext.Provider value={{ captureNote: handleCaptureNote, captureStartTime, clearCaptureData, playbackNotes }}>\n      {props.children}\n    </CaptureContext.Provider>\n  );\n};\n","import React, { FC, useContext, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { CaptureContext, ICaptureContext, IPlaybackNote } from '../../contexts/capture-context';\n// @ts-ignore\nimport Tone from 'tone';\nimport './styles.css';\n\nexport interface IKeyProps {\n  note: string;\n  color?: string;\n  style?: object;\n}\n\nconst Key: FC<IKeyProps> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [keyPressedDateTime, setKeyPressDateTime] = useState();\n  const [synth] = useState(new Tone.Synth().toMaster());\n  const { color, note, style } = props;\n\n  const handleKeyPress = () => {\n    synth.triggerAttack(note);\n\n    const now = new Date().getTime();\n    setKeyPressDateTime(now);\n  };\n\n  const handleKeyRelease = () => {\n    synth.triggerRelease();\n\n    const dur = calculateDuration();\n    captureContext.captureNote({ note, dur } as IPlaybackNote);\n  };\n\n  const calculateDuration = () => {\n    return Tone.Time((new Date().getTime() - keyPressedDateTime) / 1000).toNotation();\n  };\n\n  return isMobile ? (\n    <div className={`key ${color}`} style={style} onTouchStart={handleKeyPress} onTouchEnd={handleKeyRelease}></div>\n  ) : (\n    <div className={`key ${color}`} style={style} onMouseDown={handleKeyPress} onMouseUp={handleKeyRelease}></div>\n  );\n};\n\nexport default Key;\n","import React, { FC } from 'react';\nimport Key from '../key';\nimport './styles.css';\n\nexport interface IKeyboardProps {}\nexport interface IKey {\n  key: string;\n  color?: string;\n  style?: object;\n}\n\nconst Keyboard: FC<IKeyboardProps> = props => {\n  const keys: IKey[] = [\n    { key: 'C4' },\n    { key: 'C#4', color: 'black', style: { left: '65px' } },\n    { key: 'D4' },\n    { key: 'Eb4', color: 'black', style: { left: '200px' } },\n    { key: 'E4' },\n    { key: 'F4' },\n    { key: 'F#4', color: 'black', style: { left: '432px' } },\n    { key: 'G4' },\n    { key: 'G#4', color: 'black', style: { left: '551px' } },\n    { key: 'A4' },\n    { key: 'Bb4', color: 'black', style: { left: '674px' } },\n    { key: 'B4' },\n    { key: 'C5' },\n    { key: 'C#5', color: 'black', style: { left: '909px' } },\n    { key: 'D5' },\n    { key: 'Eb5', color: 'black', style: { left: '1030px' } },\n    { key: 'E5' }\n  ];\n\n  return (\n    <div className=\"keyboard\">\n      {keys.map(k => (\n        <Key key={k.key} note={k.key} color={k.color} style={k.style}></Key>\n      ))}\n    </div>\n  );\n};\n\nexport default Keyboard;\n","// @ts-ignore\nimport Tone from 'tone';\n\nexport const AxelF = [\n  // 1st Measure\n  {\n    time: Tone.Time('0:0:0'),\n    note: 'D3',\n    dur: '4n'\n  },\n  {\n    time: Tone.Time('0:1:0'),\n    note: 'F3',\n    dur: '8n.'\n  },\n  {\n    time: Tone.Time('0:1:3'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:2:1'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('0:2:2'),\n    note: 'G3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:3:0'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:3:2'),\n    note: 'C3',\n    dur: '8n'\n  },\n  // 2nd Measure\n  {\n    time: Tone.Time('1:0:0'),\n    note: 'D3',\n    dur: '4n'\n  },\n  {\n    time: Tone.Time('1:1:0'),\n    note: 'A3',\n    dur: '8n.'\n  },\n  {\n    time: Tone.Time('1:1:3'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:2:1'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('1:2:2'),\n    note: 'Bb3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:3:0'),\n    note: 'A3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:3:2'),\n    note: 'F3',\n    dur: '8n'\n  },\n  // 3rd Measure\n  {\n    time: Tone.Time('2:0:0'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:0:2'),\n    note: 'A3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:1:0'),\n    note: 'D4',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:1:2'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('2:1:3'),\n    note: 'C3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:2:1'),\n    note: 'C3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('2:2:2'),\n    note: 'A2',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:3:0'),\n    note: 'E3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:3:2'),\n    note: 'D3',\n    dur: '0:2:2'\n  }\n];\n\nexport default AxelF;\n","import React, { FC, useContext, useEffect, useState } from 'react';\nimport { CaptureContext, ICaptureContext } from '../../contexts/capture-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faCircle, faStop, faBan } from '@fortawesome/free-solid-svg-icons';\n// @ts-ignore\nimport Tone from 'tone';\nimport AxelF from './axel-f';\nimport './styles.css';\n\nexport interface IPlayBackControls {}\n\nconst PlayBackControls: FC<IPlayBackControls> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [isPlaying, setIsPlaying] = useState();\n  const [part, setPart] = useState();\n  const [playback, setPlayback] = useState(AxelF as any);\n  const [lastNote, setLastNote] = useState();\n  const [synth] = useState(new Tone.Synth().toMaster());\n\n  useEffect(() => {\n    const playbackNotes = captureContext.playbackNotes;\n\n    if (playbackNotes.length > 0) {\n      setLastNote(playbackNotes[playbackNotes.length - 1]);\n      setPlayback(captureContext.playbackNotes);\n    } else {\n      setLastNote(AxelF[AxelF.length - 1]);\n      setPlayback(AxelF);\n    }\n  }, [captureContext.playbackNotes]);\n\n  useEffect(() => {\n    if (part && part.length > 0) {\n      part.start(0);\n\n      Tone.Transport.scheduleOnce(function(time: any) {\n        part.removeAll();\n        Tone.Transport.toggle();\n        setIsPlaying(false);\n      }, Tone.Time(lastNote.time).toSeconds() + Tone.Time(lastNote.dur).toSeconds());\n\n      Tone.Transport.toggle();\n      setIsPlaying(true);\n    }\n  }, [part]);\n\n  const handlePlayClick = () => {\n    setPart(\n      new Tone.Part(function(time: any, event: any) {\n        synth.triggerAttackRelease(event.note, event.dur, time);\n      }, playback)\n    );\n  };\n\n  const handleStopClick = () => {\n    part.removeAll();\n    Tone.Transport.toggle();\n    setIsPlaying(false);\n  };\n\n  const handleClearPlaybackData = () => {\n    captureContext.clearCaptureData();\n    part.removeAll();\n  };\n\n  return (\n    <div className=\"controls\">\n      <div>\n        {isPlaying ? (\n          <div onClick={handleStopClick} title=\"stop\">\n            <FontAwesomeIcon size=\"lg\" icon={faStop} />\n          </div>\n        ) : (\n          <div onClick={handlePlayClick} title=\"play\">\n            <FontAwesomeIcon size=\"lg\" icon={faPlay} />\n          </div>\n        )}\n      </div>\n      <div className=\"record\" title=\"record\">\n        <FontAwesomeIcon size=\"lg\" color=\"red\" icon={faCircle} />\n      </div>\n      <div className=\"clear\" title=\"clear\" onClick={handleClearPlaybackData}>\n        <FontAwesomeIcon size=\"lg\" icon={faBan} />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayBackControls;\n","import React, { FC, useContext } from 'react';\nimport { CaptureContext, ICaptureContext } from '../../contexts/capture-context';\nimport './styles.css';\n\nexport interface IPlayBackDisplay {}\n\nconst PlayBackDisplay: FC<IPlayBackDisplay> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n\n  return (\n    <div className=\"play-back-display\">\n      <div className=\"header\">\n        <span className=\"note-header\">Note</span>\n        <span className=\"duration-header\">Duration</span>\n        <span className=\"time-header\">Time</span>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"scroll-container\">\n          {captureContext.playbackNotes.map((pbn, i) => (\n            <div key={`note-${pbn.note}-${i}`} className=\"data\">\n              <span className=\"note-data\">{pbn.note}</span>\n              <span className=\"duration-data\">{pbn.dur}</span>\n              <span className=\"time-data\">{pbn.time}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayBackDisplay;\n","import React from 'react';\nimport Keyboard from './components/keyboard';\nimport PlayBackControls from './components/play-back-controls';\nimport PlaybackDisplay from './components/play-back-display';\nimport { CaptureProvider } from './contexts/capture-context';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <CaptureProvider>\n        <Keyboard />\n        <div className=\"playback-container\">\n          <PlaybackDisplay />\n          <PlayBackControls />\n        </div>\n      </CaptureProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}