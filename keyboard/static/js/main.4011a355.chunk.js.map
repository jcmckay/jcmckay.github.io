{"version":3,"sources":["contexts/capture-context/reducer.ts","components/keyboard/reducer.ts","contexts/capture-context/index.tsx","components/keyboard/index.tsx","components/key/index.tsx","components/play-back-controls/axel-f.ts","components/play-back-controls/index.tsx","components/play-back-display/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionName","reducer","state","action","type","AddPlaybackNote","payload","ClearPlaybackNotes","CaptureContext","createContext","CaptureProvider","Consumer","props","captureStartTime","useRef","useReducer","playbackNotes","dispatch","handleCaptureNote","useCallback","playbackNote","now","Date","getTime","current","time","calculateTimeDiff","toBarsBeatsSixteenths","useEffect","length","timeToDiff","Tone","Time","Provider","value","captureNote","calculateDuration","keyPressedDateTime","toNotation","calculateTime","clearCaptureData","children","OverwriteKeyPressData","keyPressed","keyData","KeyboardMap","Key","captureContext","useContext","useState","setKeyPressDateTime","Synth","toMaster","synth","color","keyboardKey","note","style","handleKeyPress","triggerAttack","handleKeyRelease","triggerRelease","dur","isMobile","className","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","Keyboard","keysPressed","keyDown","e","get","kpObj","isPressed","startTime","handleKeyDown","key","toString","document","addEventListener","keyUpFunc","handleKeyUp","window","removeEventListener","left","map","k","AxelF","PlayBackControls","isPlaying","setIsPlaying","part","setPart","playback","setPlayback","lastNote","setLastNote","start","Transport","scheduleOnce","removeAll","toggle","toSeconds","onClick","title","size","icon","faStop","Part","event","triggerAttackRelease","faPlay","faCircle","faBan","PlayBackDisplay","pbn","i","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4011a355.chunk.js","sourcesContent":["export enum ActionName {\n  AddPlaybackNote = 'AddPlaybackNote',\n  ClearPlaybackNotes = 'ClearPlaybackNotes'\n}\n\nexport interface Action {\n  type: string;\n  payload: object;\n}\n\nexport default function reducer(state: any, action: Action) {\n  switch (action.type) {\n    case ActionName.AddPlaybackNote:\n      return [...state, action.payload];\n    case ActionName.ClearPlaybackNotes:\n      return [];\n    default:\n      return [...state];\n  }\n}\n","import { IKeyPressed } from './';\n\nexport enum ActionName {\n  OverwriteKeyPressData = 'OverwriteKeyPressData'\n}\n\nexport interface Action {\n  type: string;\n  payload: Payload;\n}\n\nexport interface Payload {\n  keyPressed: string;\n  keyData: IKeyPressed;\n}\n\nexport default function reducer(state: any, action: Action) {\n  switch (action.type) {\n    case ActionName.OverwriteKeyPressData:\n      const { payload } = action;\n      state[payload.keyPressed] = payload.keyData;\n      return state;\n    default:\n      return state;\n  }\n}\n","import React, { createContext, FC, useCallback, useEffect, useReducer, useRef } from 'react';\nimport reducer, { ActionName } from './reducer';\n// @ts-ignore\nimport Tone from 'tone';\n\nexport interface ICaptureContext {\n  captureStartTime: number;\n  calculateDuration: any;\n  calculateTime: any;\n  playbackNotes: IPlaybackNote[];\n  captureNote(playbackNote: IPlaybackNote): void;\n  clearCaptureData(): void;\n}\nexport interface ICaptureProviderProps {}\nexport interface IPlaybackNote {\n  dur?: string;\n  note: string;\n  time?: any;\n}\n\nexport const CaptureContext = createContext({} as ICaptureContext);\nexport const CaptureConsumer = CaptureContext.Consumer;\n\nexport const CaptureProvider: FC<ICaptureProviderProps> = props => {\n  // useRef because eventhandlers\n  // https://stackoverflow.com/questions/53845595/wrong-react-hooks-behaviour-with-event-listener\n  const captureStartTime = useRef(0);\n  const [playbackNotes, dispatch] = useReducer(reducer, []);\n\n  const handleCaptureNote = useCallback(\n    (playbackNote: IPlaybackNote) => {\n      const now = new Date().getTime() / 1000;\n      if (captureStartTime.current === 0) {\n        captureStartTime.current = now;\n      }\n      playbackNote.time = calculateTimeDiff(now).toBarsBeatsSixteenths();\n\n      dispatch({ type: ActionName.AddPlaybackNote, payload: playbackNote });\n    },\n    [captureStartTime]\n  );\n\n  useEffect(() => {\n    if (playbackNotes.length === 1) {\n      const now = new Date().getTime() / 1000;\n      captureStartTime.current = now;\n    }\n  }, [playbackNotes]);\n\n  const calculateTimeDiff = (timeToDiff: number) => {\n    return Tone.Time(timeToDiff - captureStartTime.current);\n  };\n\n  const clearCaptureData = () => {\n    dispatch({ type: ActionName.ClearPlaybackNotes, payload: [] });\n  };\n\n  const calculateDuration = (keyPressedDateTime: number) => {\n    return Tone.Time((new Date().getTime() - keyPressedDateTime) / 1000).toNotation();\n  };\n\n  const calculateTime = (keyPressedDateTime: number) => {\n    return Tone.Time(keyPressedDateTime - captureStartTime.current).toBarsBeatsSixteenths();\n  };\n\n  return (\n    <CaptureContext.Provider\n      value={{\n        captureNote: handleCaptureNote,\n        calculateDuration,\n        calculateTime,\n        captureStartTime: captureStartTime.current,\n        clearCaptureData,\n        playbackNotes\n      }}\n    >\n      {props.children}\n    </CaptureContext.Provider>\n  );\n};\n","import React, { FC, useContext, useEffect, useReducer } from 'react';\nimport { CaptureContext, ICaptureContext, IPlaybackNote } from '../../contexts/capture-context';\nimport reducer, { ActionName, Payload } from './reducer';\nimport Key from '../key';\nimport './styles.css';\n\n// @ts-ignore\nimport get from 'lodash/get';\n// @ts-ignore\nimport Tone from 'tone';\n\nexport interface IKeyboardProps {}\nexport interface IKey {\n  key: string;\n  keyboardKey: string;\n  color?: string;\n  style?: object;\n}\n\nexport interface IKeyPressed {\n  isPressed?: boolean;\n  startTime?: number;\n  synth: any;\n}\n\nexport enum KeyboardMap {\n  'a' = 'C4',\n  'w' = 'C#4',\n  's' = 'D4',\n  'e' = 'Eb4',\n  'd' = 'E4',\n  'f' = 'F4',\n  't' = 'F#4',\n  'g' = 'G4',\n  'y' = 'G#4',\n  'h' = 'A4',\n  'u' = 'Bb4',\n  'j' = 'B4',\n  'k' = 'C5',\n  'i' = 'C#5',\n  'l' = 'D5',\n  'o' = 'Eb5',\n  ';' = 'E5'\n}\n\nconst Keyboard: FC<IKeyboardProps> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [keysPressed, dispatch] = useReducer(reducer, {});\n\n  const keys: IKey[] = [\n    { key: 'C4', keyboardKey: 'a' },\n    { key: 'C#4', keyboardKey: 'w', color: 'black', style: { left: '65px' } },\n    { key: 'D4', keyboardKey: 's' },\n    { key: 'Eb4', keyboardKey: 'e', color: 'black', style: { left: '200px' } },\n    { key: 'E4', keyboardKey: 'd' },\n    { key: 'F4', keyboardKey: 'f' },\n    { key: 'F#4', keyboardKey: 't', color: 'black', style: { left: '432px' } },\n    { key: 'G4', keyboardKey: 'g' },\n    { key: 'G#4', keyboardKey: 'y', color: 'black', style: { left: '551px' } },\n    { key: 'A4', keyboardKey: 'h' },\n    { key: 'Bb4', keyboardKey: 'u', color: 'black', style: { left: '674px' } },\n    { key: 'B4', keyboardKey: 'j' },\n    { key: 'C5', keyboardKey: 'k' },\n    { key: 'C#5', keyboardKey: 'i', color: 'black', style: { left: '909px' } },\n    { key: 'D5', keyboardKey: 'l' },\n    { key: 'Eb5', keyboardKey: 'o', color: 'black', style: { left: '1030px' } },\n    { key: 'E5', keyboardKey: ';' }\n  ];\n\n  useEffect(() => {\n    const handleKeyDown = (keyPressed: string) => {\n      const note = (KeyboardMap as any)[keyPressed];\n\n      if (note && !get((keysPressed as any)[keyPressed], 'isPressed', false)) {\n        const kpObj: IKeyPressed = (keysPressed as any)[keyPressed] || {};\n        kpObj.isPressed = true;\n        kpObj.synth = kpObj.synth || new Tone.Synth().toMaster();\n        kpObj.startTime = new Date().getTime();\n        kpObj.synth.triggerAttack(note);\n        dispatch({ type: ActionName.OverwriteKeyPressData, payload: { keyPressed, keyData: kpObj } as Payload });\n      }\n    };\n\n    const handleKeyUp = (keyPressed: string) => {\n      const note = (KeyboardMap as any)[keyPressed];\n\n      if (note && get((keysPressed as any)[keyPressed], 'isPressed', false)) {\n        const kpObj: IKeyPressed = (keysPressed as any)[keyPressed];\n\n        kpObj.synth.triggerRelease();\n        kpObj.isPressed = false;\n\n        const note = (KeyboardMap as any)[keyPressed];\n        const dur = captureContext.calculateDuration(kpObj.startTime);\n        const playbackNote: IPlaybackNote = { note, dur };\n        captureContext.captureNote(playbackNote);\n      }\n    };\n\n    const keyDown = (e: any) => handleKeyDown(e.key.toString());\n    document.addEventListener('keydown', keyDown, false);\n\n    const keyUpFunc = (e: any) => handleKeyUp(e.key.toString());\n    document.addEventListener('keyup', keyUpFunc, false);\n\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n      window.removeEventListener('keyup', keyUpFunc);\n    };\n  }, [captureContext, keysPressed]);\n\n  return (\n    <div className=\"keyboard\">\n      {keys.map(k => (\n        <Key key={k.key} note={k.key} keyboardKey={k.keyboardKey} color={k.color} style={k.style}></Key>\n      ))}\n    </div>\n  );\n};\n\nexport default Keyboard;\n","import React, { FC, useContext, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { CaptureContext, ICaptureContext, IPlaybackNote } from '../../contexts/capture-context';\n// @ts-ignore\nimport Tone from 'tone';\nimport './styles.css';\n\nexport interface IKeyProps {\n  note: string;\n  keyboardKey: string;\n  color?: string;\n  style?: object;\n}\n\nconst Key: FC<IKeyProps> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [keyPressedDateTime, setKeyPressDateTime] = useState();\n  const [synth] = useState(new Tone.Synth().toMaster());\n  const { color, keyboardKey, note, style } = props;\n\n  const handleKeyPress = () => {\n    synth.triggerAttack(note);\n\n    const now = new Date().getTime();\n    setKeyPressDateTime(now);\n  };\n\n  const handleKeyRelease = () => {\n    synth.triggerRelease();\n\n    const dur = captureContext.calculateDuration(keyPressedDateTime);\n    const captureNote: IPlaybackNote = { note, dur };\n    captureContext.captureNote(captureNote);\n  };\n\n  return isMobile ? (\n    <div className={`key ${color}`} style={style} onTouchStart={handleKeyPress} onTouchEnd={handleKeyRelease}>\n      <div className=\"note-name\">\n        {note}({keyboardKey})\n      </div>\n    </div>\n  ) : (\n    <div className={`key ${color}`} style={style} onMouseDown={handleKeyPress} onMouseUp={handleKeyRelease}>\n      <div className=\"note-name\">\n        {note}({keyboardKey})\n      </div>\n    </div>\n  );\n};\n\nexport default Key;\n","// @ts-ignore\nimport Tone from 'tone';\n\nexport const AxelF = [\n  // 1st Measure\n  {\n    time: Tone.Time('0:0:0'),\n    note: 'D3',\n    dur: '4n'\n  },\n  {\n    time: Tone.Time('0:1:0'),\n    note: 'F3',\n    dur: '8n.'\n  },\n  {\n    time: Tone.Time('0:1:3'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:2:1'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('0:2:2'),\n    note: 'G3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:3:0'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:3:2'),\n    note: 'C3',\n    dur: '8n'\n  },\n  // 2nd Measure\n  {\n    time: Tone.Time('1:0:0'),\n    note: 'D3',\n    dur: '4n'\n  },\n  {\n    time: Tone.Time('1:1:0'),\n    note: 'A3',\n    dur: '8n.'\n  },\n  {\n    time: Tone.Time('1:1:3'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:2:1'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('1:2:2'),\n    note: 'Bb3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:3:0'),\n    note: 'A3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:3:2'),\n    note: 'F3',\n    dur: '8n'\n  },\n  // 3rd Measure\n  {\n    time: Tone.Time('2:0:0'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:0:2'),\n    note: 'A3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:1:0'),\n    note: 'D4',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:1:2'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('2:1:3'),\n    note: 'C3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:2:1'),\n    note: 'C3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('2:2:2'),\n    note: 'A2',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:3:0'),\n    note: 'E3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:3:2'),\n    note: 'D3',\n    dur: '0:2:2'\n  }\n];\n\nexport default AxelF;\n","import React, { FC, useContext, useEffect, useState } from 'react';\nimport { CaptureContext, ICaptureContext } from '../../contexts/capture-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faCircle, faStop, faBan } from '@fortawesome/free-solid-svg-icons';\n// @ts-ignore\nimport Tone from 'tone';\nimport AxelF from './axel-f';\nimport './styles.css';\n\nexport interface IPlayBackControls {}\n\nconst PlayBackControls: FC<IPlayBackControls> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [isPlaying, setIsPlaying] = useState();\n  const [part, setPart] = useState();\n  const [playback, setPlayback] = useState(AxelF as any);\n  const [lastNote, setLastNote] = useState();\n  const [synth] = useState(new Tone.Synth().toMaster());\n\n  useEffect(() => {\n    const playbackNotes = captureContext.playbackNotes;\n\n    if (playbackNotes.length > 0) {\n      setLastNote(playbackNotes[playbackNotes.length - 1]);\n      setPlayback(captureContext.playbackNotes);\n    } else {\n      setLastNote(AxelF[AxelF.length - 1]);\n      setPlayback(AxelF);\n    }\n  }, [captureContext.playbackNotes]);\n\n  useEffect(() => {\n    if (part && part.length > 0) {\n      part.start(0);\n\n      Tone.Transport.scheduleOnce(function(time: any) {\n        part.removeAll();\n        Tone.Transport.toggle();\n        setIsPlaying(false);\n      }, Tone.Time(lastNote.time).toSeconds() + Tone.Time(lastNote.dur).toSeconds());\n\n      Tone.Transport.toggle();\n      setIsPlaying(true);\n    }\n  }, [part, lastNote]);\n\n  const handlePlayClick = () => {\n    setPart(\n      new Tone.Part(function(time: any, event: any) {\n        synth.triggerAttackRelease(event.note, event.dur, time);\n      }, playback)\n    );\n  };\n\n  const handleStopClick = () => {\n    part.removeAll();\n    Tone.Transport.toggle();\n    setIsPlaying(false);\n  };\n\n  const handleClearPlaybackData = () => {\n    captureContext.clearCaptureData();\n    if (part && part.length > 0) {\n      part.removeAll();\n    }\n  };\n\n  return (\n    <div className=\"controls\">\n      <div>\n        {isPlaying ? (\n          <div onClick={handleStopClick} title=\"stop\">\n            <FontAwesomeIcon size=\"lg\" icon={faStop} />\n          </div>\n        ) : (\n          <div onClick={handlePlayClick} title=\"play\">\n            <FontAwesomeIcon size=\"lg\" icon={faPlay} />\n          </div>\n        )}\n      </div>\n      <div className=\"record\" title=\"record\">\n        <FontAwesomeIcon size=\"lg\" color=\"red\" icon={faCircle} />\n      </div>\n      <div className=\"clear\" title=\"clear\" onClick={handleClearPlaybackData}>\n        <FontAwesomeIcon size=\"lg\" icon={faBan} />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayBackControls;\n","import React, { FC, useContext } from 'react';\nimport { CaptureContext, ICaptureContext } from '../../contexts/capture-context';\nimport './styles.css';\n\nexport interface IPlayBackDisplay {}\n\nconst PlayBackDisplay: FC<IPlayBackDisplay> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n\n  return (\n    <div className=\"play-back-display\">\n      <div className=\"header\">\n        <span className=\"note-header\">Note</span>\n        <span className=\"duration-header\">Duration</span>\n        <span className=\"time-header\">Time</span>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"scroll-container\">\n          {captureContext.playbackNotes.map((pbn, i) => (\n            <div key={`note-${pbn.note}-${i}`} className=\"data\">\n              <span className=\"note-data\">{pbn.note}</span>\n              <span className=\"duration-data\">{pbn.dur}</span>\n              <span className=\"time-data\">{pbn.time}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayBackDisplay;\n","import React from 'react';\nimport Keyboard from './components/keyboard';\nimport PlayBackControls from './components/play-back-controls';\nimport PlaybackDisplay from './components/play-back-display';\nimport { CaptureProvider } from './contexts/capture-context';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <CaptureProvider>\n        <Keyboard />\n        <div className=\"playback-container\">\n          <PlaybackDisplay />\n          <PlayBackControls />\n        </div>\n      </CaptureProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}